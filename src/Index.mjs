// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_array from "rescript/lib/es6/caml_array.js";
import * as React$1 from "@headlessui/react";

function Index$Hero(Props) {
  var children = Props.children;
  return React.createElement("div", undefined, React.createElement("div", {
                  className: ""
                }, children));
}

var platforms = [
  "CUDA",
  "CPU",
  "CUDA-XLA"
];

function Index$Variant$Option(Props) {
  var name = Props.name;
  return React.createElement(React$1.Tab, {
              className: (function (param) {
                  return [
                            "w-full py-2.5 text-sm leading-5 font-medium rounded-lg",
                            "focus:outline-none focus:ring-2 ring-offset-2 ring-offset-blue-400 ring-white ring-opacity-60",
                            param.selected ? "bg-white shadow text-blue-700 text-opacity-80" : "text-blue-100 hover:bg-white hover:bg-opacity-10 hover:text-white"
                          ].join(" ");
                }),
              children: (function (param) {
                  return name;
                }),
              key: name
            });
}

var builds = [
  /* Stable */0,
  /* Nightly */1
];

function $$default(param) {
  var match = React.useState(function () {
        return {
                build: /* Stable */0,
                platform: {
                  TAG: /* CUDA */0,
                  _0: "10.2"
                }
              };
      });
  var setState = match[1];
  var state = match[0];
  var availableCUDAVersions = function (state) {
    var match = state.platform;
    if (typeof match === "number") {
      return [];
    } else if (match.TAG === /* CUDA */0) {
      return [
              "10.0",
              "10.1",
              "10.2",
              "11.0",
              "11.1",
              "11.2"
            ];
    } else {
      return [
              "10.0",
              "10.1",
              "10.2",
              "11.0",
              "11.1"
            ];
    }
  };
  var updatePlatfrom = function (currentPlatform, displayName) {
    switch (displayName) {
      case "CPU" :
          return /* CPU */0;
      case "CUDA" :
          if (typeof currentPlatform === "number" || currentPlatform.TAG === /* CUDA */0) {
            return {
                    TAG: /* CUDA */0,
                    _0: "10.2"
                  };
          } else {
            return {
                    TAG: /* CUDA */0,
                    _0: currentPlatform._0
                  };
          }
      case "CUDA-XLA" :
          if (typeof currentPlatform === "number") {
            return {
                    TAG: /* CUDA_XLA */1,
                    _0: "10.1"
                  };
          }
          if (currentPlatform.TAG !== /* CUDA */0) {
            return {
                    TAG: /* CUDA_XLA */1,
                    _0: "10.1"
                  };
          }
          var ver = currentPlatform._0;
          if (ver === "11.2") {
            return {
                    TAG: /* CUDA_XLA */1,
                    _0: "10.1"
                  };
          } else {
            return {
                    TAG: /* CUDA_XLA */1,
                    _0: ver
                  };
          }
      default:
        return {
                TAG: /* CUDA */0,
                _0: "10.2"
              };
    }
  };
  return React.createElement(Index$Hero, {
              children: React.createElement("div", {
                    className: "rounded-xl overflow-hidden bg-gradient-to-r from-sky-400 to-blue-600 flex flex-col items-center justify-center w-full"
                  }, React.createElement("div", {
                        className: "w-full max-w-md px-2 py-16 sm:px-0"
                      }, React.createElement(React$1.Tab.Group, {
                            children: React.createElement(React$1.Tab.List, {
                                  children: (function (param) {
                                      return builds.map(function (b) {
                                                  var s = b ? "Nightly" : "Stable";
                                                  return React.createElement(Index$Variant$Option, {
                                                              name: s
                                                            });
                                                });
                                    }),
                                  className: "flex p-1 space-x-1 bg-blue-900 bg-opacity-20 rounded-xl"
                                }),
                            onChange: (function (index) {
                                return Curry._1(setState, (function (s) {
                                              return {
                                                      build: Caml_array.get(builds, index),
                                                      platform: s.platform
                                                    };
                                            }));
                              })
                          }), React.createElement(React$1.Tab.Group, {
                            children: React.createElement(React$1.Tab.List, {
                                  children: (function (param) {
                                      return platforms.map(function (category) {
                                                  return React.createElement(Index$Variant$Option, {
                                                              name: category
                                                            });
                                                });
                                    }),
                                  className: "my-1 flex p-1 space-x-1 bg-blue-900 bg-opacity-20 rounded-xl"
                                }),
                            onChange: (function (index) {
                                return Curry._1(setState, (function (s) {
                                              return {
                                                      build: s.build,
                                                      platform: updatePlatfrom(s.platform, Caml_array.get(platforms, index))
                                                    };
                                            }));
                              })
                          }), React.createElement(React$1.Tab.Group, {
                            children: null
                          }, React.createElement(React$1.Tab.List, {
                                children: (function (param) {
                                    return availableCUDAVersions(state).map(function (category) {
                                                return React.createElement(Index$Variant$Option, {
                                                            name: category
                                                          });
                                              });
                                  }),
                                className: "flex p-1 space-x-1 bg-blue-900 bg-opacity-20 rounded-xl"
                              }), React.createElement(React$1.Tab.Panels, {
                                children: (function (param) {
                                    return availableCUDAVersions(state).map(function (v, idx) {
                                                return React.createElement(React$1.Tab.Panel, {
                                                            className: (function (param) {
                                                                return [
                                                                          "bg-white rounded-xl p-3",
                                                                          "focus:outline-none focus:ring-2 ring-offset-2 ring-offset-blue-400 ring-white ring-opacity-60"
                                                                        ].join(" ");
                                                              }),
                                                            children: (function (param) {
                                                                var match = state.build;
                                                                return [
                                                                          "python3 -m pip install oneflow -f",
                                                                          match ? "https://staging.oneflow.info/branch/master/cu101" : "https://release.oneflow.info",
                                                                          ""
                                                                        ].join(" ");
                                                              }),
                                                            key: v
                                                          });
                                              });
                                  }),
                                className: "mt-2"
                              }))))
            });
}

export {
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
